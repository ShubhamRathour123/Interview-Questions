class Solution
{
    public int longestPalinSubseq(String S)
    {
        int n=S.length();
        char[] arr1=S.toCharArray();
        char[] arr2=new char[n+1];
        for(int i=n-1;i>=0;i--)
        {
            arr2[n-i]=arr1[i];
        }
        int m=arr2.length;
        int[][] dp=new int[n][m];
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                dp[i][j]=-1;
            }
        }
        int i=0,j=0;
        int ans=lcs(arr1,arr2,n,m,i,j,dp);
        return ans;
    }
    static int lcs(char[] arr1,char[] arr2,int n,int m,int i,int j,int[][] dp)
    {
        int ans=1;
        if(i==n || j==m)
        {
            return 0;
        }
        if(dp[i][j]!=-1)
        {
            return dp[i][j];
        }
        if(arr1[i]==arr2[j])
        {
            ans=1+lcs(arr1,arr2,n,m,i+1,j+1,dp);
        }
        else
        {
            ans=Math.max(lcs(arr1,arr2,n,m,i,j+1,dp),lcs(arr1,arr2,n,m,i+1,j,dp));
        }
        return dp[i][j]=ans;
    }
}
